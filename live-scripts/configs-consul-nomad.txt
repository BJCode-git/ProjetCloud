# Compte rendu projet cloud
Groupe Perle : Killian CAVALIER et Julien BRELOT

## Déroulement 

### Configuration consul VMs
Après avoir accéder au vm et configuré les clefs ssh il a été nécessaire de faire en sorte que chaque noeuds soit présent sur consul
Pour se faire nous avons copié le fichier de configuration disponible sur notre VM 1 possédant le serveur, que nous avons modifié comme suivi : 

```
#   
# Ansible managed
# Adapted from racaillou server for gravalanch VM and consul client

# Group name
datacenter = "perle"

# Save the persistent data to /opt/consul. This directory is owned by the `consul` user.
data_dir = "/opt/consul"
node_name = "gravalanch"

# Allow clients to connect from any interface
# client_addr = "0.0.0.0"

# Advertise the address of the VXLAN interface
advertise_addr = "172.16.12.101"

# Enable the web interface
ui_config {
  enabled = true
}

# Whether it is running in server mode or not
# server = true

# This server expects to be the only one in the cluster.
# Comment this line if this is not a server.
# bootstrap_expect = 1

addresses {
  # Bind the DNS service to the VXLAN interface
  # We can't bind on 0.0.0.0, because systemd-resolved already listens on 127.0.0.53
  dns = "172.16.12.101"
}

ports {
  # Make the DNS service listen on port 53, instead of the default 8600
  dns = 53
}

# List of upstream DNS servers to forward queries to
recursors = ["1.1.1.1", "1.0.0.1"]

# List of serveur to auto join if cleint is down
retry_join = ["172.16.12.100"]
```

Nous avons rajouté cette dernière ligne afin que le client se connecte directement au serveur si besoin, par soucis de résilience.

### COnfiguration Nomad 
Par le même procédé, on copie et adapte le fichier de configuration initial sur la VM cliente : 
```
#
# Ansible managed
# Copied from the racaillou serveur and adapted

# Group name
datacenter = "perle"

# Save the persistent data to /opt/nomad
data_dir = "/opt/nomad"

# Allow clients to connect from any interface
bind_addr = "0.0.0.0"

advertise {
  # We explicitely advertise the IP on the vxlan interface
  http = "172.16.12.101"
  rpc = "172.16.12.101"
  serf = "172.16.12.101"
}

# This node is a server, and expects to be the only server in the cluster
server {
  enabled = false
#  bootstrap_expect = 1
}

# This node is not running jobs
client {
  enabled = true
}

# Connect to the local Consul agent
consul {
  address = "127.0.0.1:8500"
}

# Show the UI and link to the Consul UI
ui {
  enabled = true

  consul {
    ui_url = "https://perle.consul.100do.se/ui"
  }
}
```

### Ajout de l'ip flottante 

```root@racaillou:/etc/nomad.d# ip address add dev vxlan12 172.16.12.110/24
root@racaillou:/etc/nomad.d# ip a
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host 
       valid_lft forever preferred_lft forever
2: ens3: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000
    link/ether fa:16:3e:70:7a:0f brd ff:ff:ff:ff:ff:ff
    altname enp0s3
    inet 192.168.70.136/24 metric 100 brd 192.168.70.255 scope global dynamic ens3
       valid_lft 29257sec preferred_lft 29257sec
    inet6 fe80::f816:3eff:fe70:7a0f/64 scope link 
       valid_lft forever preferred_lft forever
3: vxlan12: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1450 qdisc noqueue state UNKNOWN group default qlen 1000
    link/ether 4e:eb:89:73:94:87 brd ff:ff:ff:ff:ff:ff
    inet 172.16.12.100/24 brd 172.16.12.255 scope global vxlan12
       valid_lft forever preferred_lft forever
    inet 172.16.12.120/24 brd 172.16.12.255 scope global secondary vxlan12
       valid_lft forever preferred_lft forever
    inet 172.16.12.110/24 scope global secondary vxlan12
       valid_lft forever preferred_lft forever
    inet6 fe80::4ceb:89ff:fe73:9487/64 scope link 
       valid_lft forever preferred_lft forever
5: docker0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN group default 
    link/ether 02:42:1e:bb:31:15 brd ff:ff:ff:ff:ff:ff
    inet 10.110.0.1/24 brd 10.110.0.255 scope global docker0
       valid_lft forever preferred_lft forever
```


